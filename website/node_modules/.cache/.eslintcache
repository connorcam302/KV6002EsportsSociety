[{"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\index.js":"1","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\App.js":"2","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\reportWebVitals.js":"3","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Navbar.js":"4","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\AdminPage.js":"5","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\ErrorPage.js":"6","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\LoginRegisterPage.js":"7","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\AdminButtons.js":"8","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamPage.js":"9","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Teams.js":"10","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Team.js":"11","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\SearchBox.js":"12","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormWeeklyEvents.js":"13","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormManageTeam.js":"14","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormTeamAccolades.js":"15","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormWeeklyMatches.js":"16","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Homepage.js":"17","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Router.js":"18","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormLogin.js":"19","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormRegister.js":"20","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\PlayerPage.js":"21","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamPlayers.js":"22","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamAccolades.js":"23","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamStats.js":"24","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamResults.js":"25"},{"size":517,"mtime":1648821120876,"results":"26","hashOfConfig":"27"},{"size":1758,"mtime":1649064568085,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1648821120877,"results":"29","hashOfConfig":"27"},{"size":7490,"mtime":1649062802623,"results":"30","hashOfConfig":"27"},{"size":13291,"mtime":1649062802614,"results":"31","hashOfConfig":"27"},{"size":1465,"mtime":1649062802615,"results":"32","hashOfConfig":"27"},{"size":14744,"mtime":1649062802622,"results":"33","hashOfConfig":"27"},{"size":1028,"mtime":1649062802613,"results":"34","hashOfConfig":"27"},{"size":6493,"mtime":1649064253683,"results":"35","hashOfConfig":"27"},{"size":1999,"mtime":1649064277047,"results":"36","hashOfConfig":"27"},{"size":1970,"mtime":1648904383750,"results":"37","hashOfConfig":"27"},{"size":417,"mtime":1648836532139,"results":"38","hashOfConfig":"27"},{"size":1598,"mtime":1649062802802,"results":"39","hashOfConfig":"27"},{"size":558,"mtime":1649062802617,"results":"40","hashOfConfig":"27"},{"size":1733,"mtime":1649062802618,"results":"41","hashOfConfig":"27"},{"size":1577,"mtime":1649062802796,"results":"42","hashOfConfig":"27"},{"size":1263,"mtime":1649062802621,"results":"43","hashOfConfig":"27"},{"size":3210,"mtime":1649062802626,"results":"44","hashOfConfig":"27"},{"size":1293,"mtime":1649062802616,"results":"45","hashOfConfig":"27"},{"size":2060,"mtime":1649062802618,"results":"46","hashOfConfig":"27"},{"size":6555,"mtime":1649062802624,"results":"47","hashOfConfig":"27"},{"size":1706,"mtime":1649062802628,"results":"48","hashOfConfig":"27"},{"size":2821,"mtime":1649062802627,"results":"49","hashOfConfig":"27"},{"size":4447,"mtime":1649062802631,"results":"50","hashOfConfig":"27"},{"size":3276,"mtime":1649062802629,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ciff9",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\index.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\App.js",["132","133","134","135","136","137","138","139","140"],[],"import './App.css';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Navbar from './components/Navbar.js';\r\nimport Homepage from './components/Homepage';\r\nimport LoginRegisterPage from './components/LoginRegisterPage';\r\nimport AdminPage from './components/AdminPage'\r\nimport ErrorPage from './components/ErrorPage'\r\nimport TeamPage from './components/TeamPage';\r\nimport Router from './components/Router'\r\n\r\n/**\r\n* App\r\n* \r\n* Main class component for displaying content.\r\n*\r\n* @author Connor Campbell W18003255\r\n* @collab\r\n*\r\n* @todo\r\n*/\r\n\r\n\r\n/**\r\n* theme\r\n* \r\n* Uses MUI to create a theme, this is used to give default styling to all MUI components \r\n* throughout the website.\r\n*\r\n*/\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#170D05\",\r\n      light: \"#84847C\",\r\n      contrastText: \"#f7f7f7\"\r\n    },\r\n    secondary: {\r\n      main: \"#D5761D\",\r\n      light: \"#827C74\",\r\n      contrastText: \"#1a1a1a\"\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n  },\r\n  \r\n});\r\n\r\n\r\n/**\r\n* App()\r\n* \r\n* Main function for displaying the website.\r\n*/\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n        />\r\n        <Router />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\reportWebVitals.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Navbar.js",["141","142"],[],"import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\n/**\r\n* Navbar\r\n* \r\n* Creates the navbar for the page. Depending on the users credentials options will be adjusted. For\r\n* example, if the user is an admin, login will be replaced with logout and the admin panel option \r\n* will be shown.\r\n*\r\n* @author Connor Campbell W18003255\r\n* @collab Ethan Borrill W18001798\r\n*\r\n* @todo - Add functionality for the user to go to their own profile.\r\n        - Add vikings logo somewhere.\r\n*/\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n    let navigate = useNavigate();\r\n\r\n    \r\n    /**\r\n    * toPage(path)\r\n    * \r\n    * Forwards the user to the page supplied in the parameters.\r\n    * \r\n    * @param String path  The name of the page to be forwarded to.\",\r\n    */\r\n    \r\n    const toPage = (path) => {\r\n        navigate(path);\r\n    }\r\n\r\n    \r\n    /**\r\n    * logout()\r\n    * \r\n    * Used to logout the user, both admin and authenticated are set to false then the user has \r\n    * their token removed. The page is then refreshed to update the page to the changes.\r\n    */\r\n    \r\n    let authenticated = false;\r\n    let admin = false;\r\n\r\n    const logout = () => {\r\n        authenticated = false;\r\n        admin = false;\r\n        localStorage.removeItem('UserLoginToken');\r\n        window.location.reload(true);\r\n    }\r\n\r\n    /**\r\n     * Checks if the user has a token, if they have a token, authenticate them, if they are an \r\n     * admin, allocated admin permissions.\r\n     */\r\n\r\n    if(localStorage.getItem(\"UserLoginToken\")) {\r\n        authenticated = true;\r\n        let decodedToken = jwt_decode(localStorage.getItem(\"UserLoginToken\"))\r\n        if(decodedToken.user_isAdmin == 1) {\r\n            admin = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If the user is authenticated and an admin, they will have access to the admin panel.\r\n     */\r\n\r\n    if(authenticated && admin) {\r\n        console.log(\"User is admin.\")\r\n        return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n            <Box container spacing={2} alignItems=\"center\" sx={{ display: 'flex', flexDirection: 'row', paddingRight: 2 }}>\r\n                <Typography sx={{ fontSize: 24, paddingLeft: 2, paddingRight: 2 }}>\r\n                    NORTHUMBRIA VIKINGS\r\n                </Typography>\r\n                <Button\r\n                    key=\"toEvents\"\r\n                    onClick={() => toPage(\"events\")}\r\n                    sx={{ color: 'white', display: 'block' }}\r\n                >\r\n                    Weekly Events\r\n                </Button>\r\n                <Button\r\n                    key=\"toResults\"\r\n                    onClick={() => toPage(\"results\")}\r\n                    sx={{ color: 'white', display: 'block', height: \"100%\" }}\r\n                >\r\n                    Results\r\n                </Button>\r\n                <Button\r\n                    key=\"toTeams\"\r\n                    onClick={() => toPage(\"teams\")}\r\n                    sx={{ color: 'white', display: 'block' }}\r\n                >\r\n                    Teams\r\n                </Button>\r\n                <Button\r\n                    key=\"toAdmin\"\r\n                    onClick={() => toPage(\"admin\")}\r\n                    sx={{ color: 'white', display: 'block', marginLeft: \"auto\" }}\r\n                >\r\n                    Admin\r\n                </Button>\r\n                <Button\r\n                    key=\"toLogin\"\r\n                    onClick={() => logout()}\r\n                    sx={{ color: 'white', display: 'block', }}\r\n                >\r\n                    Logout\r\n                </Button>\r\n            </Box>\r\n        </AppBar>\r\n        </Box>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * If the user is not an admin but is authenticated, they will still be shown the logged in navbar,\r\n     * just without the admin panel option.\r\n     */\r\n\r\n    if(authenticated && !admin) {\r\n        console.log(\"User is not admin.\")\r\n        return(\r\n            <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Box container spacing={2} alignItems=\"center\" sx={{ display: 'flex', flexDirection: 'row', paddingRight: 2 }}>\r\n                    <Typography sx={{ fontSize: 24, paddingLeft: 2, paddingRight: 2 }}>\r\n                        NORTHUMBRIA VIKINGS\r\n                    </Typography>\r\n                    <Button\r\n                        key=\"toEvents\"\r\n                        onClick={() => toPage(\"events\")}\r\n                        sx={{ color: 'white', display: 'block' }}\r\n                    >\r\n                        Weekly Events\r\n                    </Button>\r\n                    <Button\r\n                        key=\"toResults\"\r\n                        onClick={() => toPage(\"results\")}\r\n                        sx={{ color: 'white', display: 'block', height: \"100%\" }}\r\n                    >\r\n                        Results\r\n                    </Button>\r\n                    <Button\r\n                        key=\"toTeams\"\r\n                        onClick={() => toPage(\"teams\")}\r\n                        sx={{ color: 'white', display: 'block' }}\r\n                    >\r\n                        Teams\r\n                    </Button>\r\n                    <Button\r\n                        key=\"toLogin\"\r\n                        onClick={() => logout()}\r\n                        sx={{ color: 'white', display: 'block', marginLeft: \"auto\" }}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </Box>\r\n            </AppBar>\r\n        </Box>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * The default navbar to be shown if the user is not logged in.\r\n     */\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Box container spacing={2} alignItems=\"center\" sx={{ display: 'flex', flexDirection: 'row', paddingRight: 2 }}>\r\n                    <Typography sx={{ fontSize: 24, paddingLeft: 2, paddingRight: 2 }}>\r\n                        NORTHUMBRIA VIKINGS\r\n                    </Typography>\r\n                    <Button\r\n                        key=\"toEvents\"\r\n                        onClick={() => toPage(\"events\")}\r\n                        sx={{ color: 'white', display: 'block' }}\r\n                    >\r\n                        Weekly Events\r\n                    </Button>\r\n                    <Button\r\n                        key=\"toResults\"\r\n                        onClick={() => toPage(\"results\")}\r\n                        sx={{ color: 'white', display: 'block', height: \"100%\" }}\r\n                    >\r\n                        Results\r\n                    </Button>\r\n                    <Button\r\n                        key=\"toTeams\"\r\n                        onClick={() => toPage(\"teams\")}\r\n                        sx={{ color: 'white', display: 'block' }}\r\n                    >\r\n                        Teams\r\n                    </Button>\r\n                    <Button\r\n                        key=\"toLogin\"\r\n                        onClick={() => toPage(\"login\")}\r\n                        sx={{ color: 'white', display: 'block', marginLeft: \"auto\" }}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </Box>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}",["143","144"],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\AdminPage.js",["145","146","147"],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\ErrorPage.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\LoginRegisterPage.js",["148"],[],"import React from \"react\";\r\nimport FormLogin from \"./FormLogin\";\r\nimport FormRegister from \"./FormRegister\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Box } from \"@mui/system\";\r\n\r\n/**\r\n* LoginRegisterPage\r\n* \r\n* The Class manages the functionality and content displayed on the Login and Register page of the website. The page provides users with both a login and register form, both of which are accesible through the links are the bottom of each form - \r\n* which simply switches the state of the page to display the other form.\r\n*\r\n* @author Ethan Borrill W18001798\r\n*/\r\n\r\nclass LoginRegisterPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: false,\r\n            admin: false,\r\n            registered: false,\r\n            registerpage: false,\r\n            token: null,\r\n            email: \"\",\r\n            password: \"\",\r\n            userign: \"\",\r\n            userFirst: \"\",\r\n            userLast: \"\",\r\n            error: \"\",\r\n        }\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handlefirstName = this.handlefirstName.bind(this);\r\n        this.handlelastName = this.handlelastName.bind(this);\r\n        this.handleUserIGN = this.handleUserIGN.bind(this);\r\n        this.handleLoginClick = this.handleLoginClick.bind(this);\r\n        this.handleRegisterClick = this.handleRegisterClick.bind(this);\r\n        this.handleRegisterState = this.handleRegisterState.bind(this);\r\n        this.handleLoginState = this.handleLoginState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('UserLoginToken')) {\r\n            let decodedToken = jwt_decode(localStorage.getItem(\"UserLoginToken\"))\r\n            this.setState({\r\n                user: true,\r\n                token: localStorage.getItem('myReadingListToken')\r\n            })\r\n            if (decodedToken.user_isAdmin = 1) {\r\n                this.setState({\r\n                    admin: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * handleEmail(e)\r\n    * \r\n    * Handles the input and change of text within the email field used with the register and login pages.\r\n    *\r\n    */\r\n\r\n    handleEmail = (e) => {\r\n        this.setState({ email: e.target.value })\r\n    }\r\n\r\n\r\n\r\n    /**\r\n    * handlePassword(e)\r\n    * \r\n    * Handles the input and change of text within the password field used within the register and login pages.\r\n    *\r\n    */\r\n\r\n    handlePassword = (e) => {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n\r\n\r\n    /**\r\n    * handlefirstName(e)\r\n    * \r\n    * Handles the input and change of text within the 'First Name' field used within the register page.\r\n    *\r\n    */\r\n\r\n    handlefirstName = (e) => {\r\n        this.setState({ userFirst: e.target.value })\r\n    }\r\n\r\n\r\n    /**\r\n    * handlelastName(e)\r\n    * \r\n    * Handles the input and change of text within the 'Last Name' field used within the register page.\r\n    *\r\n    */\r\n\r\n    handlelastName = (e) => {\r\n        this.setState({ userLast: e.target.value })\r\n    }\r\n\r\n\r\n    /**\r\n    * handleUserIGN(e)\r\n    * \r\n    * Handles the input and change of text within the 'User IGN' field used within the register page.\r\n    *\r\n    */\r\n\r\n    handleUserIGN = (e) => {\r\n        this.setState({ userign: e.target.value })\r\n    }\r\n\r\n    /**\r\n    * handleRegisterState()\r\n    * \r\n    * Changes the state of the webpage to display the register form when the user presses the register button on the Login page.\r\n    *\r\n    */\r\n\r\n    handleRegisterState = () => {\r\n        this.setState(\r\n            {\r\n                loginpage: false,\r\n                registerpage: true\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    /**\r\n    * handleLoginState()\r\n    * \r\n    * Changes the state of the webpage to display the login form when the user presses the login button on the Register page.\r\n    *\r\n    */\r\n\r\n    handleLoginState = () => {\r\n        this.setState(\r\n            {\r\n                loginpage: true,\r\n                registerpage: false\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    /**\r\n    * handleLoginClick()\r\n    * \r\n    * This functionality is used when the user presses the 'Login' button on the login page, this will first check the form data entered into it\r\n    * - which should the details be correct, the 'user' boolean is updated to true and a token is created to keep the user logged into the website should they leave.\r\n    *\r\n    * In the event the details entered are incorrect, this will be flagged within an error message and prevent the user from logging in.\r\n    * @param [type] $[var]   [Description]\r\n    */\r\n\r\n    handleLoginClick = () => {\r\n        let url = \"http://unn-w18001798.newnumyspace.co.uk/KV6002/Assessment/api/userlogin\"\r\n\r\n        let formData = new FormData();\r\n        formData.append('user_email', this.state.email);\r\n        formData.append('user_password', this.state.password);\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: new Headers(),\r\n            body: formData\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) { //If the status code of the webpage is 200, perform the login function from the API.\r\n                    return response.json()\r\n                } else if (response.status === 401) { //If the status code of the webpage is 401, display an error saying the details collected are incorrect.\r\n                    this.setState({ error: \"The email address or password you have entered are not correct, please try again!\" })\r\n                }\r\n            })\r\n\r\n            .then((data) => { //Using the data collected from a successful login, store the data in a Java Web Token to be used on the webpage and set the boolean 'user' to true.\r\n                if (\"token\" in data.results) {\r\n                    this.setState(\r\n                        {\r\n                            user: true,\r\n                            token: data.results.token\r\n                        }\r\n                    )\r\n\r\n                    localStorage.setItem('UserLoginToken', data.results.token); //Store the Token within the Browser's local storage.\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"something went wrong \", err)\r\n            }\r\n            );\r\n    }\r\n\r\n\r\n    /**\r\n    * handleRegisterClick\r\n    * \r\n    * This functionality handles when a user presses the Register button on the Register page. Includes error catches for if form inputs are empty.\r\n    * Will only submit data to the database if all fields are filled and provide the correct data. Upon complete submission, the boolean 'Registered' is updated to be true.\r\n    * This is used to move users to the secondary login page for users to login immediately after registering.\r\n    *\r\n    */\r\n\r\n    handleRegisterClick = () => {\r\n        let url = \"http://unn-w18001798.newnumyspace.co.uk/KV6002/Assessment/api/register\"\r\n\r\n        let formData = new FormData();\r\n        formData.append('user_email', this.state.email);\r\n        formData.append('user_password', this.state.password);\r\n        formData.append('user_ign', this.state.userign);\r\n        formData.append('user_firstName', this.state.userFirst);\r\n        formData.append('user_lastName', this.state.userLast);\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: new Headers(),\r\n            body: formData\r\n        })\r\n            .then((response) => {\r\n                if ((response.status === 200) || (response.status === 204)) {\r\n                    this.setState(\r\n                        {\r\n                            registered: true\r\n                        }\r\n                    )\r\n                    return response.json()\r\n                } else if (response.status === 406) {\r\n                    this.setState({ error: \"The email address or password you have entered is not acceptable.\" })\r\n                }\r\n                else if (response.status === 403) {\r\n                    this.setState({ error: \"The email address you have entered already exists, please try another email address.\" })\r\n                }\r\n                if (this.state.email == ' ') {\r\n                    this.setState({ error: \".\" })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"something went wrong \", err)\r\n            }\r\n            );\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns {Page} - Will display the rendered page content based on the conditions required.\r\n     */\r\n\r\n    render() {\r\n        let errorMessage = this.state.error\r\n\r\n        /**\r\n         * Default page presented upon accessing the page, will display standard login page.\r\n         * Is also accessed should a user press the 'Already have an account? Log in here!' link on the register page.\r\n         */\r\n        let page = (\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography sx={{ fontSize: 30, fontWeight: 500 }}>\r\n                            Login\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: 24, fontWeight: 350 }}>\r\n                            Please enter your details to log into your account!\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                    </Grid>\r\n                    <Grid item xs={4} sx={{ justifyContent: 'center' }}>\r\n                        <FormLogin\r\n                            handleEmail={this.handleEmail}\r\n                            handlePassword={this.handlePassword}\r\n                            handleLoginClick={this.handleLoginClick}\r\n                            handleRegisterState={this.handleRegisterState}\r\n                        />\r\n                        <ul><p className=\"errorMessage\">{errorMessage}</p></ul>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        )\r\n\r\n\r\n        /**\r\n         * The content required for the Register page, will be displayed if user presses the 'Don't have an account? register one here!' link on the Login page.\r\n         */\r\n        if (this.state.registerpage) {\r\n            page = (\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography sx={{ fontSize: 30, fontWeight: 500 }}>\r\n                                Register\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 24, fontWeight: 350 }}>\r\n                                Please enter your details below to register your account!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                        </Grid>\r\n                        <Grid item xs={4} sx={{ justifyContent: 'center' }}>\r\n                            <FormRegister\r\n                                handlefirstName={this.handlefirstName}\r\n                                handlelastName={this.handlelastName}\r\n                                handleUserIGN={this.handleUserIGN}\r\n                                handleEmail={this.handleEmail}\r\n                                handlePassword={this.handlePassword}\r\n                                handleRegisterClick={this.handleRegisterClick}\r\n                                handleLoginState={this.handleLoginState}\r\n                            />\r\n                            <ul><p className=\"errorMessage\">{errorMessage}</p></ul>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            )\r\n        }\r\n\r\n        /**\r\n         * Secondary login page content, displayed only when a user performs a successfuly account registration.\r\n         */\r\n        if (this.state.registered) {\r\n            page = (\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography sx={{ fontSize: 30, fontWeight: 500 }}>\r\n                                Your details have been successfully registered!\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 24, fontWeight: 350 }}>\r\n                                Please enter your details below to log into your account!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                        </Grid>\r\n                        <Grid item xs={4} sx={{ justifyContent: 'center' }}>\r\n                            <FormLogin\r\n                                handleEmail={this.handleEmail}\r\n                                handlePassword={this.handlePassword}\r\n                                handleLoginClick={this.handleLoginClick}\r\n                            />\r\n                            <ul><p className=\"errorMessage\">{errorMessage}</p></ul>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            )\r\n        }\r\n\r\n        /**\r\n         * Content to be displayed if a user has successfully logged into their account.\r\n         */\r\n        if (this.state.user && this.state.admin) {\r\n            page = (\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography sx={{ fontSize: 30, fontWeight: 500 }}>\r\n                                Login successful!\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 24, fontWeight: 350 }}>\r\n                                You have been successfully logged! Please enjoy the site!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                        </Grid>\r\n                        <Grid item xs={4} sx={{ justifyContent: 'center' }}>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            )\r\n        }\r\n        return (\r\n            <div>{page}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LoginRegisterPage;","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\AdminButtons.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamPage.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Teams.js",["149","150"],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Team.js",["151"],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\SearchBox.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormWeeklyEvents.js",["152"],[],"import * as React from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport Teams from './Teams'\r\n\r\n/**\r\n* FormWeeklyEvents\r\n* \r\n* This class is used to create the form necessary to create and upload weekly event forms onto the Weekly events page of the website.\r\n*\r\n* @author Ethan Borrill W18001798\r\n*/\r\n\r\nclass FormWeeklyEvents extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul><input\r\n                    type='text'\r\n                    placeholder='Title of event'\r\n                    value={this.props.eventTitle}\r\n                    onChange={this.props.handleEventTitle}\r\n                /></ul>\r\n\r\n                <ul><input\r\n                    type='text'\r\n                    placeholder='Game being played'\r\n                    value={this.props.eventDesc}\r\n                    onChange={this.props.handleEventGame}\r\n                /></ul>\r\n\r\n                <ul><textarea\r\n                    type='text'\r\n                    placeholder='Description of event'\r\n                    value={this.props.eventDesc}\r\n                    onChange={this.props.handleEventDesc}\r\n                /></ul>\r\n\r\n                <ul><input\r\n                    type='text'\r\n                    placeholder='Date & Time of event'\r\n                    value={this.props.eventDesc}\r\n                    onChange={this.props.handleEventTime}\r\n                /></ul>\r\n\r\n                <ul><Button onClick={this.props.handleEventSubmit}>Submit Event</Button></ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormWeeklyEvents;","C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormManageTeam.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormTeamAccolades.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormWeeklyMatches.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Homepage.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\Router.js",["153","154","155","156","157","158","159"],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormLogin.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\FormRegister.js",[],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\PlayerPage.js",["160","161","162","163","164","165","166"],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamPlayers.js",["167","168"],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamAccolades.js",["169","170"],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamStats.js",["171"],[],"C:\\Users\\Student\\Documents\\HarryUni\\KV6002EsportsSociety\\website\\src\\components\\TeamResults.js",["172","173"],[],{"ruleId":"174","severity":1,"message":"175","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":23},{"ruleId":"174","severity":1,"message":"178","line":3,"column":25,"nodeType":"176","messageId":"177","endLine":3,"endColumn":31},{"ruleId":"174","severity":1,"message":"179","line":3,"column":33,"nodeType":"176","messageId":"177","endLine":3,"endColumn":38},{"ruleId":"174","severity":1,"message":"180","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":14},{"ruleId":"174","severity":1,"message":"181","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":16},{"ruleId":"174","severity":1,"message":"182","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":25},{"ruleId":"174","severity":1,"message":"183","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":17},{"ruleId":"174","severity":1,"message":"184","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":17},{"ruleId":"174","severity":1,"message":"185","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":16},{"ruleId":"174","severity":1,"message":"186","line":17,"column":11,"nodeType":"176","messageId":"177","endLine":17,"endColumn":18},{"ruleId":"174","severity":1,"message":"187","line":32,"column":11,"nodeType":"176","messageId":"177","endLine":32,"endColumn":18},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"174","severity":1,"message":"192","line":11,"column":10,"nodeType":"176","messageId":"177","endLine":11,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":52,"column":43,"nodeType":"195","messageId":"196","endLine":52,"endColumn":45},{"ruleId":"193","severity":1,"message":"194","line":57,"column":48,"nodeType":"195","messageId":"196","endLine":57,"endColumn":50},{"ruleId":"197","severity":1,"message":"198","line":54,"column":16,"nodeType":"199","messageId":"200","endLine":54,"endColumn":45},{"ruleId":"201","severity":1,"message":"202","line":29,"column":11,"nodeType":"176","messageId":"203","endLine":29,"endColumn":14},{"ruleId":"174","severity":1,"message":"204","line":57,"column":13,"nodeType":"176","messageId":"177","endLine":57,"endColumn":19},{"ruleId":"174","severity":1,"message":"205","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":13},{"ruleId":"174","severity":1,"message":"205","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":13},{"ruleId":"174","severity":1,"message":"206","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"207","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"208","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":17},{"ruleId":"174","severity":1,"message":"209","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":22},{"ruleId":"174","severity":1,"message":"210","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":17},{"ruleId":"174","severity":1,"message":"211","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":16},{"ruleId":"174","severity":1,"message":"212","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":20},{"ruleId":"174","severity":1,"message":"213","line":11,"column":10,"nodeType":"176","messageId":"177","endLine":11,"endColumn":22},{"ruleId":"174","severity":1,"message":"214","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":14},{"ruleId":"215","severity":1,"message":"216","line":68,"column":17,"nodeType":"217","messageId":"218","endLine":68,"endColumn":55,"fix":"219"},{"ruleId":"215","severity":1,"message":"216","line":79,"column":17,"nodeType":"217","messageId":"218","endLine":79,"endColumn":54,"fix":"220"},{"ruleId":"215","severity":1,"message":"216","line":90,"column":17,"nodeType":"217","messageId":"218","endLine":90,"endColumn":50,"fix":"221"},{"ruleId":"222","severity":1,"message":"223","line":104,"column":21,"nodeType":"217","endLine":104,"endColumn":67},{"ruleId":"224","severity":1,"message":"225","line":163,"column":1,"nodeType":"226","messageId":"227","endLine":172,"endColumn":12},{"ruleId":"174","severity":1,"message":"228","line":3,"column":19,"nodeType":"176","messageId":"177","endLine":3,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":50,"column":29,"nodeType":"217","endLine":50,"endColumn":127},{"ruleId":"174","severity":1,"message":"229","line":54,"column":11,"nodeType":"176","messageId":"177","endLine":54,"endColumn":15},{"ruleId":"224","severity":1,"message":"225","line":88,"column":1,"nodeType":"226","messageId":"227","endLine":95,"endColumn":16},{"ruleId":"174","severity":1,"message":"210","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":17},{"ruleId":"174","severity":1,"message":"229","line":54,"column":11,"nodeType":"176","messageId":"177","endLine":54,"endColumn":15},{"ruleId":"224","severity":1,"message":"225","line":92,"column":1,"nodeType":"226","messageId":"227","endLine":99,"endColumn":16},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'Navbar' is defined but never used.","'Homepage' is defined but never used.","'LoginRegisterPage' is defined but never used.","'AdminPage' is defined but never used.","'ErrorPage' is defined but never used.","'TeamPage' is defined but never used.","'toLogin' is assigned a value but never used.","'toAdmin' is assigned a value but never used.","no-native-reassign",["230"],"no-negated-in-lhs",["231"],"'toHaveStyle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-const-assign","'url' is constant.","const","'noData' is assigned a value but never used.","'Teams' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Typography' is defined but never used.","'TwitchPlayer' is defined but never used.","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"232","text":"233"},{"range":"234","text":"233"},{"range":"235","text":"233"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Grid' is defined but never used.","'rows' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2230,2230]," rel=\"noreferrer\"",[2601,2601],[2975,2975]]